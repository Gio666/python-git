Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> buscar_nombres
Rule 1     buscar_nombres -> nombre_no_encontrado
Rule 2     buscar_nombres -> nombres
Rule 3     nombres -> nombre nombres
Rule 4     nombres -> nombre
Rule 5     nombre -> PARTE_IZQUIERDA_LABEL CEDULA NOMBRE PARTE_DERECHA_LABEL
Rule 6     nombre_no_encontrado -> NOMBRE_NO_ENCONTRADO

Terminals, with rules where they appear

CEDULA               : 5
NOMBRE               : 5
NOMBRE_NO_ENCONTRADO : 6
PARTE_DERECHA_LABEL  : 5
PARTE_IZQUIERDA_LABEL : 5
error                : 

Nonterminals, with rules where they appear

buscar_nombres       : 0
nombre               : 3 4
nombre_no_encontrado : 1
nombres              : 2 3

Parsing method: LALR

state 0

    (0) S' -> . buscar_nombres
    (1) buscar_nombres -> . nombre_no_encontrado
    (2) buscar_nombres -> . nombres
    (6) nombre_no_encontrado -> . NOMBRE_NO_ENCONTRADO
    (3) nombres -> . nombre nombres
    (4) nombres -> . nombre
    (5) nombre -> . PARTE_IZQUIERDA_LABEL CEDULA NOMBRE PARTE_DERECHA_LABEL

    NOMBRE_NO_ENCONTRADO shift and go to state 1
    PARTE_IZQUIERDA_LABEL shift and go to state 6

    nombres                        shift and go to state 3
    nombre_no_encontrado           shift and go to state 4
    buscar_nombres                 shift and go to state 2
    nombre                         shift and go to state 5

state 1

    (6) nombre_no_encontrado -> NOMBRE_NO_ENCONTRADO .

    $end            reduce using rule 6 (nombre_no_encontrado -> NOMBRE_NO_ENCONTRADO .)


state 2

    (0) S' -> buscar_nombres .



state 3

    (2) buscar_nombres -> nombres .

    $end            reduce using rule 2 (buscar_nombres -> nombres .)


state 4

    (1) buscar_nombres -> nombre_no_encontrado .

    $end            reduce using rule 1 (buscar_nombres -> nombre_no_encontrado .)


state 5

    (3) nombres -> nombre . nombres
    (4) nombres -> nombre .
    (3) nombres -> . nombre nombres
    (4) nombres -> . nombre
    (5) nombre -> . PARTE_IZQUIERDA_LABEL CEDULA NOMBRE PARTE_DERECHA_LABEL

    $end            reduce using rule 4 (nombres -> nombre .)
    PARTE_IZQUIERDA_LABEL shift and go to state 6

    nombre                         shift and go to state 5
    nombres                        shift and go to state 7

state 6

    (5) nombre -> PARTE_IZQUIERDA_LABEL . CEDULA NOMBRE PARTE_DERECHA_LABEL

    CEDULA          shift and go to state 8


state 7

    (3) nombres -> nombre nombres .

    $end            reduce using rule 3 (nombres -> nombre nombres .)


state 8

    (5) nombre -> PARTE_IZQUIERDA_LABEL CEDULA . NOMBRE PARTE_DERECHA_LABEL

    NOMBRE          shift and go to state 9


state 9

    (5) nombre -> PARTE_IZQUIERDA_LABEL CEDULA NOMBRE . PARTE_DERECHA_LABEL

    PARTE_DERECHA_LABEL shift and go to state 10


state 10

    (5) nombre -> PARTE_IZQUIERDA_LABEL CEDULA NOMBRE PARTE_DERECHA_LABEL .

    PARTE_IZQUIERDA_LABEL reduce using rule 5 (nombre -> PARTE_IZQUIERDA_LABEL CEDULA NOMBRE PARTE_DERECHA_LABEL .)
    $end            reduce using rule 5 (nombre -> PARTE_IZQUIERDA_LABEL CEDULA NOMBRE PARTE_DERECHA_LABEL .)

